import boto3
from PIL import Image
import io
import os

s3 = boto3.client('s3')

# Target bucket name (edit to match yours)
TARGET_BUCKET = "photo-resized-yogesh"

def lambda_handler(event, context):
    # Get bucket and object key from event
    source_bucket = event['Records'][0]['s3']['bucket']['name']
    object_key = event['Records'][0]['s3']['object']['key']
    print(f"Processing file: {object_key} from bucket: {source_bucket}")

    try:
        # Download the image from source S3 bucket
        response = s3.get_object(Bucket=source_bucket, Key=object_key)
        image_content = response['Body'].read()

        # Open image with Pillow
        image = Image.open(io.BytesIO(image_content))

        # Resize (keep aspect ratio, max width=300px)
        image.thumbnail((300, 300))

        # Save resized image to bytes buffer
        buffer = io.BytesIO()
        image.save(buffer, format=image.format)
        buffer.seek(0)

        # Define target object key
        file_name, file_ext = os.path.splitext(object_key)
        resized_key = f"{file_name}_resized{file_ext}"

        # Upload to target bucket
        s3.put_object(
            Bucket=TARGET_BUCKET,
            Key=resized_key,
            Body=buffer,
            ContentType=response['ContentType']
        )

        print(f"✅ Resized image uploaded to {TARGET_BUCKET}/{resized_key}")
        return {
            'statusCode': 200,
            'body': f"Resized image saved as {resized_key}"
        }

    except Exception as e:
        print(f"❌ Error processing {object_key}: {e}")
        return {
            'statusCode': 500,
            'body': str(e)
        }
